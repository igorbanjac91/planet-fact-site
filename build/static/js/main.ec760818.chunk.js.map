{"version":3,"sources":["components/Header.js","components/Card.js","App.js","index.js"],"names":["Nav","props","closeMenu","e","event","links","document","querySelectorAll","Array","from","forEach","elm","index","target","setAttribute","removeAttribute","setBorderColor","id","to","className","onClick","BurgerIcon","toggleMenu","xmlns","width","height","fill","fill-rule","d","Header","useEffect","useState","isActive","setIsActive","menu","getElementById","classList","remove","add","CardMain","name","setName","overview","content","text","setText","images","planet","imageUrl","setImageUrl","geology","imageSurfacePath","setImageSurfacePath","source","wikipediaUrl","setWikipediaUrl","showSurfaceImage","setShowSurfaceImage","color","setColor","size","setSize","toggleOverview","setToggleOverview","toggleStructure","setToggleStructure","toggleSurface","setToggleSurface","borderBottom","navItemStyle","setNavItemStyle","window","innerWidth","windowSize","setWindowSize","showOverview","hideImage","addEventListener","structure","querySelector","surface","childNodes","nodeValue","resetNavValues","backgroundColor","setBackgroundColor","changeNavValues","style","internal","backgroundImage","process","substring","src","alt","href","CardInfoList","InfoListItem","value","rotation","revolution","radius","temperature","PlanetCard","planetObj","Planet","planetName","useParams","setPlanet","data","find","word","charAt","toUpperCase","slice","App","exact","path","children","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec760818.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n\n\n  useEffect(() => {\n    \n    \n  })\n\n  const [isActive, setIsActive] = useState(false)\n  \n  function toggleMenu() {\n    const menu = document.getElementById(\"main-nav\");\n    if (isActive) {\n      menu.classList.remove(\"show-menu\")\n      setIsActive(false);\n    } else {\n      menu.classList.add(\"show-menu\")\n      setIsActive(true);\n    }\n  }\n  \n  function closeMenu() {\n    const menu = document.getElementById(\"main-nav\");\n    menu.classList.remove(\"show-menu\")\n    setIsActive(false);\n  }\n\n  return ( \n    <header className=\"main-header\">\n      <div className=\"main-header__header\">\n        <h1>THE PLANETS</h1>\n        <BurgerIcon toggleMenu={toggleMenu}/>\n      </div>\n      <Nav closeMenu={closeMenu}/>\n    </header>\n  )\n}\n\n\nfunction Nav(props) {\n\n  function closeMenu(e) {\n    setBorderColor(e)\n    props.closeMenu();\n  }\n\n  function setBorderColor(event) {\n    let links = document.querySelectorAll(\".link-page\")\n    Array.from(links).forEach((elm, index) => {\n      if ( elm === event.target) {\n        elm.setAttribute(\"id\",`border-${index}`)\n      } else {\n        elm.removeAttribute(\"id\", `border-${index}`)\n      }\n    } ) \n  }\n\n  return (\n    <nav id=\"main-nav\">\n      <ul>\n        <li><Link to=\"/mercury\" className=\"link-page\" id=\"border-0\" onClick={closeMenu}>Mercury</Link></li>\n        <li><Link to=\"/venus\" className=\"link-page\" onClick={closeMenu}>Venus</Link></li>\n        <li><Link to=\"/earth\" className=\"link-page\" onClick={closeMenu}>Earth</Link></li>\n        <li><Link to=\"/mars\" className=\"link-page\" onClick={closeMenu}>Mars</Link></li>\n        <li><Link to=\"/jupiter\" className=\"link-page\" onClick={closeMenu}>Jupiter</Link></li>\n        <li><Link to=\"/saturn\" className=\"link-page\" onClick={closeMenu}>Saturn</Link></li>\n        <li><Link to=\"/uranus\" className=\"link-page\" onClick={closeMenu}>Uranus</Link></li>\n        <li><Link to=\"/neptune\" className=\"link-page\" onClick={closeMenu}>Neptune</Link></li>\n      </ul>\n    </nav>\n  )\n}\n\n\nfunction BurgerIcon(props) {\n\n  function toggleMenu() {\n    props.toggleMenu()\n  }\n\n  return (\n    <svg onClick={toggleMenu} className=\"burger-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"17\"><g fill=\"#FFF\" fill-rule=\"evenodd\"><path d=\"M0 0h24v3H0zM0 7h24v3H0zM0 14h24v3H0z\"/></g></svg>\n  )\n}\n\nexport default Header;","import React, { useState, useEffect } from \"react\";\n\n\nfunction PlanetCard(props) {\n\n  return (\n    <div className=\"planet-card\">\n      <CardMain     \n        planet={props.planetObj}\n        name={props.planetObj.name}\n        overview={props.planetObj.overview} \n        structure={props.planetObj.structure} \n        geology={props.planetObj.geology} \n        images={props.planetObj.images} \n      />\n      <CardInfoList planet={props.planetObj}/>\n    </div>\n\n  );\n}  \n\nfunction CardMain(props) {\n\n  const [name, setName] = useState(props.name)\n  const [text, setText] = useState(props.overview.content)\n  const [imageUrl, setImageUrl] = useState(props.images.planet)\n  const [imageSurfacePath, setImageSurfacePath] = useState(props.images.geology)\n  const [wikipediaUrl, setWikipediaUrl] = useState(props.overview.source)\n  const [showSurfaceImage, setShowSurfaceImage] = useState(false)\n  const [color, setColor] = useState(props.planet.color)\n  const [size, setSize] = useState(props.planet.size)\n  const [toggleOverview, setToggleOverview] = useState(false)\n  const [toggleStructure, setToggleStructure] = useState(false)\n  const [toggleSurface, setToggleSurface] = useState(false)\n  const [navItemStyle, setNavItemStyle] = useState( { borderBottom: `3px solid ${color}`, color: \"#fff\" })\n  const [windowSize, setWindowSize] = useState(window.innerWidth) \n\n  useEffect(() => {\n    showOverview();\n\n    window.addEventListener(\"resize\", () => {\n      setWindowSize(window.innerWidth)\n    })\n\n    if (windowSize < 600) {\n      setBorderColor(color)\n      resetNavValues()\n    } else {\n      setBackgroundColor(color)\n      changeNavValues()\n    }\n  \n    return () => {\n      window.addEventListener(\"resize\", () => {\n        setWindowSize(window.innerWidth)\n      })\n    }\n\n  }, [props.name, windowSize, color])\n\n  function showOverview() {\n    setName(props.name);\n    setText(props.overview.content);\n    setImageUrl(props.images.planet);\n    setWikipediaUrl(props.overview.source);\n    setSize(props.planet.size)\n    setColor(props.planet.color)\n    hideImage();\n    setToggleOverview(true)\n    setToggleStructure(false)\n    setToggleSurface(false)\n  }\n  \n  function showStructure() {\n    setText(props.planet.structure.content);\n    setImageUrl(props.images.internal);\n    setWikipediaUrl(props.planet.structure.source);\n    hideImage()\n    setToggleStructure(true)\n    setToggleOverview(false)\n    setToggleSurface(false)\n  }\n\n  function showSurface() {\n    setText(props.planet.geology.content);\n    setWikipediaUrl(props.planet.geology.source);\n    setImageUrl(props.images.planet);\n    setImageSurfacePath(props.images.geology)\n    showImage();\n    setToggleSurface(true)\n    setToggleStructure(false)\n    setToggleOverview(false)\n  }\n\n  function showImage() {\n    setShowSurfaceImage(true);\n  }\n\n  function hideImage() {\n    setShowSurfaceImage(false);\n  }\n    \n  function setBackgroundColor(color) {\n    setNavItemStyle( { backgroundColor: `${color}` } )\n  }\n\n  function setBorderColor(color) {\n    setNavItemStyle( { borderBottom: `3px solid ${color}`, color: \"#fff\" } )\n  }\n\n  function changeNavValues() {\n    let structure = document.querySelector(\"#structureItem\");    \n    let surface = document.querySelector(\"#surfaceItem\");\n    structure.childNodes[1].nodeValue = \"iternal structure\";\n    surface.childNodes[1].nodeValue = \"surface geology\";\n  }\n\n  function resetNavValues() {\n    let structure = document.querySelector(\"#structureItem\");    \n    let surface = document.querySelector(\"#surfaceItem\");\n    structure.childNodes[1].nodeValue = \"structure\";\n    surface.childNodes[1].nodeValue = \"geology\";\n  }\n\n  return (\n    <div className=\"planet-card__container\">\n      <nav className=\"planet-card__nav\">\n        <ul>\n          <li>\n            <button onClick={showOverview} id=\"overviewItem\" style={ toggleOverview ? navItemStyle : null }>\n              <span className=\"hide\">01</span>\n              Overview\n            </button>\n          </li>\n          <li>\n            <button onClick={showStructure} id=\"structureItem\" style={ toggleStructure ? navItemStyle : null }>\n              <span className=\"hide\">02</span>\n              Structure\n            </button>\n          </li>\n          <li>\n            <button onClick={showSurface} id=\"surfaceItem\" style={ toggleSurface ? navItemStyle : null }>\n              <span className=\"hide\">03</span>\n              Surface\n            </button>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"planet-image-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}${imageUrl.substring(1)})`, width: `${size}%` }}>\n        { showSurfaceImage ? <img className=\"surface-image\" src={`${process.env.PUBLIC_URL}${imageSurfacePath.substring(1)}`} alt=\"surface planet\" /> : null }\n      </div>\n      <main className=\"planet-card__main\">\n        <h2>{name}</h2>\n        <p>{text}</p>\n        <span>Source: <a href={wikipediaUrl}>Wikipedia</a></span>\n      </main>\n    </div>\n    )\n}\n\nfunction CardInfoList(props) {\n  \n  return (\n    <ul className=\"planet-card__info\">\n      <InfoListItem name=\"rotation time\" value={props.planet.rotation} />\n      <InfoListItem name=\"revolution time\" value={props.planet.revolution} />\n      <InfoListItem name=\"radius\" value={props.planet.radius} />\n      <InfoListItem name=\"average temp.\" value={props.planet.temperature} />\n    </ul>\n  )\n}\n\nfunction InfoListItem(props) {\n  return (\n    <li>\n      <span>{props.name}</span>\n      <span className=\"info-value\" >{props.value}</span>\n    </li>\n  )\n}\n\n\nexport default PlanetCard;","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router, \n  Switch, \n  Route, \n  Redirect,\n  useParams\n} from \"react-router-dom\"\nimport Header from \"./components/Header\";\nimport PlanetCard from './components/Card';\nimport data from \"./data.json\";\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" >\n            <Redirect to=\"/mercury\" />\n          </Route>\n          <Route path=\"/:planetName\" children={<Planet />} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nfunction Planet() {\n  \n  const { planetName } = useParams();\n\n  const [planet, setPlanet] = useState(null)\n\n  useEffect(() => {\n    let planet = data.find( (planetObj) => planetObj.name === capitalize(planetName))\n    setPlanet(planet);\n  }, [planetName]) \n  \n\n  function capitalize(word) {\n    let first = word.charAt(0);\n    return first.toUpperCase() + word.slice(1);\n  }\n  \n  if (planet === null) {\n    return <p>Loading profile...</p>;\n  }\n  return (\n    <PlanetCard planetName={planetName} planetObj={planet} />\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport \"./stylesheets/main.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}